# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2016, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-17 11:36+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.3\n"

#: ../../ReleaseNotes.rst:3
msgid "LLVM 3.8 Release Notes"
msgstr ""

#: ../../ReleaseNotes.rst:10
msgid "Introduction"
msgstr ""

#: ../../ReleaseNotes.rst:12
msgid ""
"This document contains the release notes for the LLVM Compiler "
"Infrastructure, release 3.8.  Here we describe the status of LLVM, "
"including major improvements from the previous release, improvements in "
"various subprojects of LLVM, and some of the current users of the code.  "
"All LLVM releases may be downloaded from the `LLVM releases web site "
"<http://llvm.org/releases/>`_."
msgstr ""

#: ../../ReleaseNotes.rst:18
msgid ""
"For more information about LLVM, including information about the latest "
"release, please check out the `main LLVM web site <http://llvm.org/>`_.  "
"If you have questions or comments, the `LLVM Developer's Mailing List "
"<http://lists.llvm.org/mailman/listinfo/llvm-dev>`_ is a good place to "
"send them."
msgstr ""

#: ../../ReleaseNotes.rst:25
msgid "Non-comprehensive list of changes in this release"
msgstr ""

#: ../../ReleaseNotes.rst:26
msgid ""
"With this release, the minimum Windows version required for running LLVM "
"is Windows 7. Earlier versions, including Windows Vista and XP are no "
"longer supported."
msgstr ""

#: ../../ReleaseNotes.rst:30
msgid ""
"With this release, the autoconf build system is deprecated. It will be "
"removed in the 3.9 release. Please migrate to using CMake. For more "
"information see: `Building LLVM with CMake <CMake.html>`_"
msgstr ""

#: ../../ReleaseNotes.rst:34
msgid ""
"We have documented our C API stability guarantees for both development "
"and release branches, as well as documented how to extend the C API. "
"Please see the `developer documentation <DeveloperPolicy.html#c-api-"
"changes>`_ for more information."
msgstr ""

#: ../../ReleaseNotes.rst:39
msgid ""
"The C API function ``LLVMLinkModules`` is deprecated. It will be removed "
"in the 3.9 release. Please migrate to ``LLVMLinkModules2``. Unlike the "
"old function the new one"
msgstr ""

#: ../../ReleaseNotes.rst:43
msgid "Doesn't take an unused parameter."
msgstr ""

#: ../../ReleaseNotes.rst:44
msgid "Destroys the source instead of only damaging it."
msgstr ""

#: ../../ReleaseNotes.rst:45
msgid "Does not record a message. Use the diagnostic handler instead."
msgstr ""

#: ../../ReleaseNotes.rst:47
msgid ""
"The C API functions ``LLVMParseBitcode``, ``LLVMParseBitcodeInContext``, "
"``LLVMGetBitcodeModuleInContext`` and ``LLVMGetBitcodeModule`` have been "
"deprecated. They will be removed in 3.9. Please migrate to the versions "
"with a 2 suffix. Unlike the old ones the new ones do not record a "
"diagnostic message. Use the diagnostic handler instead."
msgstr ""

#: ../../ReleaseNotes.rst:53
msgid ""
"The deprecated C APIs ``LLVMGetBitcodeModuleProviderInContext`` and "
"``LLVMGetBitcodeModuleProvider`` have been removed."
msgstr ""

#: ../../ReleaseNotes.rst:56
msgid ""
"The deprecated C APIs ``LLVMCreateExecutionEngine``, "
"``LLVMCreateInterpreter``, ``LLVMCreateJITCompiler``, "
"``LLVMAddModuleProvider`` and ``LLVMRemoveModuleProvider`` have been "
"removed."
msgstr ""

#: ../../ReleaseNotes.rst:60
msgid ""
"With this release, the C API headers have been reorganized to improve "
"build time. Type specific declarations have been moved to Type.h, and "
"error handling routines have been moved to ErrorHandling.h. Both are "
"included in Core.h so nothing should change for projects directly "
"including the headers, but transitive dependencies may be affected."
msgstr ""

#: ../../ReleaseNotes.rst:66
msgid "llvm-ar now supports thin archives."
msgstr ""

#: ../../ReleaseNotes.rst:68
msgid ""
"llvm doesn't produce ``.data.rel.ro.local`` or ``.data.rel`` sections "
"anymore."
msgstr ""

#: ../../ReleaseNotes.rst:70
msgid ""
"Aliases to ``available_externally`` globals are now rejected by the "
"verifier."
msgstr ""

#: ../../ReleaseNotes.rst:72
msgid ""
"The IR Linker has been split into ``IRMover`` that moves bits from one "
"module to another and Linker proper that decides what to link."
msgstr ""

#: ../../ReleaseNotes.rst:75
msgid "Support for dematerializing has been dropped."
msgstr ""

#: ../../ReleaseNotes.rst:77
msgid ""
"``RegisterScheduler::setDefault`` was removed. Targets that used to call "
"into the command line parser to set the ``DAGScheduler``, and that don't "
"have enough control with ``setSchedulingPreference``, should look into "
"overriding the ``SubTargetHook`` \"``getDAGScheduler()``\"."
msgstr ""

#: ../../ReleaseNotes.rst:82
msgid ""
"``ilist_iterator<T>`` no longer has implicit conversions to and from "
"``T*``, since ``ilist_iterator<T>`` may be pointing at the sentinel "
"(which is usually not of type ``T`` at all).  To convert from an iterator"
" ``I`` to a pointer, use ``&*I``; to convert from a pointer ``P`` to an "
"iterator, use ``P->getIterator()``.  Alternatively, explicit conversions "
"via ``static_cast<T>(U)`` are still available."
msgstr ""

#: ../../ReleaseNotes.rst:89
msgid ""
"``ilist_node<T>::getNextNode()`` and ``ilist_node<T>::getPrevNode()`` now"
" fail at compile time when the node cannot access its parent list. "
"Previously, when the sentinel was was an ``ilist_half_node<T>``, this API"
" could return the sentinel instead of ``nullptr``.  Frustrated callers "
"should be updated to use ``iplist<T>::getNextNode(T*)`` instead.  "
"Alternatively, if the node ``N`` is guaranteed not to be the last in the "
"list, it is safe to call ``&*++N->getIterator()`` directly."
msgstr ""

#: ../../ReleaseNotes.rst:97
msgid ""
"The `Kaleidoscope tutorials <tutorial/index.html>`_ have been updated to "
"use the ORC JIT APIs."
msgstr ""

#: ../../ReleaseNotes.rst:100
msgid "ORC now has a basic set of C bindings."
msgstr ""

#: ../../ReleaseNotes.rst:102
msgid ""
"Optional support for linking clang and the LLVM tools with a single "
"libLLVM shared library. To enable this, pass "
"``-DLLVM_LINK_LLVM_DYLIB=ON`` to CMake. See `Building LLVM with CMake`_ "
"for more details."
msgstr ""

#: ../../ReleaseNotes.rst:106
msgid ""
"The optimization to move the prologue and epilogue of functions in colder"
" code path (shrink-wrapping) is now enabled by default."
msgstr ""

#: ../../ReleaseNotes.rst:109
msgid ""
"A new target-independent gcc-compatible emulated Thread Local Storage "
"mode is added.  When ``-femultated-tls`` flag is used, all accesses to "
"TLS variables are converted to calls to ``__emutls_get_address`` in the "
"runtime library."
msgstr ""

#: ../../ReleaseNotes.rst:114
msgid ""
"MSVC-compatible exception handling has been completely overhauled. New "
"instructions have been introduced to facilitate this: `New exception "
"handling instructions <ExceptionHandling.html#new-exception-handling-"
"instructions>`_. While we have done our best to test this feature "
"thoroughly, it would not be completely surprising if there were a few "
"lingering issues that early adopters might bump into."
msgstr ""

#: ../../ReleaseNotes.rst:123
msgid "Changes to the ARM Backends"
msgstr ""

#: ../../ReleaseNotes.rst:125
msgid "During this release the AArch64 target has:"
msgstr ""

#: ../../ReleaseNotes.rst:127
msgid ""
"Added support for more sanitizers (MSAN, TSAN) and made them compatible "
"with all VMA kernel configurations (currently tested on 39 and 42 bits)."
msgstr ""

#: ../../ReleaseNotes.rst:129
msgid "Gained initial LLD support in the new ELF back-end"
msgstr ""

#: ../../ReleaseNotes.rst:130 ../../ReleaseNotes.rst:142
msgid ""
"Extended the Load/Store optimiser and cleaned up some of the bad "
"decisions made earlier."
msgstr ""

#: ../../ReleaseNotes.rst:132
msgid ""
"Expanded LLDB support, including watchpoints, native building, "
"Renderscript, LLDB-server, debugging 32-bit applications."
msgstr ""

#: ../../ReleaseNotes.rst:134
msgid "Added support for the ``Exynos M1`` chip."
msgstr ""

#: ../../ReleaseNotes.rst:136
msgid "During this release the ARM target has:"
msgstr ""

#: ../../ReleaseNotes.rst:138
msgid ""
"Gained massive performance improvements on embedded benchmarks due to "
"finally running the stride vectorizer in full form, incrementing the "
"performance gains that we already had in the previous releases with "
"limited stride vectorization."
msgstr ""

#: ../../ReleaseNotes.rst:141
msgid "Expanded LLDB support, including watchpoints, unwind tables"
msgstr ""

#: ../../ReleaseNotes.rst:144
#, python-format
msgid ""
"Simplified code generation for global variable addresses in ELF, "
"resulting in a significant (4% in Chromium) reduction in code size."
msgstr ""

#: ../../ReleaseNotes.rst:146
msgid ""
"Gained some additional code size improvements, though there's still a "
"long road ahead, especially for older cores."
msgstr ""

#: ../../ReleaseNotes.rst:148
msgid "Added some EABI floating point comparison functions to Compiler-RT"
msgstr ""

#: ../../ReleaseNotes.rst:149
msgid ""
"Added support for Windows+GNU triple, ``+features`` in "
"``-mcpu``/``-march`` options."
msgstr ""

#: ../../ReleaseNotes.rst:153
msgid "Changes to the MIPS Target"
msgstr ""

#: ../../ReleaseNotes.rst:155
msgid "During this release the MIPS target has:"
msgstr ""

#: ../../ReleaseNotes.rst:157
msgid ""
"Significantly extended support for the Integrated Assembler. See below "
"for more information"
msgstr ""

#: ../../ReleaseNotes.rst:159
msgid "Added support for the ``P5600`` processor."
msgstr ""

#: ../../ReleaseNotes.rst:160
msgid ""
"Added support for the ``interrupt`` attribute for MIPS32R2 and later. "
"This attribute will generate a function which can be used as a interrupt "
"handler on bare metal MIPS targets using the static relocation model."
msgstr ""

#: ../../ReleaseNotes.rst:163
msgid "Added support for the ``ERETNC`` instruction found in MIPS32R5 and later."
msgstr ""

#: ../../ReleaseNotes.rst:164
msgid "Added support for OpenCL. See http://portablecl.org/."
msgstr ""

#: ../../ReleaseNotes.rst:166
msgid ""
"Address spaces 1 to 255 are now reserved for software use and conversions"
" between them are no-op casts."
msgstr ""

#: ../../ReleaseNotes.rst:169
msgid ""
"Removed the ``mips16`` value for the ``-mcpu`` option since it is an "
":abbr:`ASE (Application Specific Extension)` and not a processor. If you "
"were using this, please specify another CPU and use ``-mips16`` to enable"
" MIPS16."
msgstr ""

#: ../../ReleaseNotes.rst:172
msgid ""
"Removed ``copy_u.w`` from 32-bit MSA and ``copy_u.d`` from 64-bit MSA "
"since they have been removed from the MSA specification due to forward "
"compatibility issues.  For example, 32-bit MSA code containing "
"``copy_u.w`` would behave differently on a 64-bit processor supporting "
"MSA. The corresponding intrinsics are still available and may expand to "
"``copy_s.[wd]`` where this is appropriate for forward compatibility "
"purposes."
msgstr ""

#: ../../ReleaseNotes.rst:178
msgid ""
"Relaxed the ``-mnan`` option to allow ``-mnan=2008`` on MIPS32R2/MIPS64R2"
" for compatibility with GCC."
msgstr ""

#: ../../ReleaseNotes.rst:180
msgid "Made MIPS64R6 the default CPU for 64-bit Android triples."
msgstr ""

#: ../../ReleaseNotes.rst:182
msgid ""
"The MIPS target has also fixed various bugs including the following "
"notable fixes:"
msgstr ""

#: ../../ReleaseNotes.rst:185
msgid ""
"Fixed reversed operands on ``mthi``/``mtlo`` in the DSP :abbr:`ASE "
"(Application Specific Extension)`."
msgstr ""

#: ../../ReleaseNotes.rst:187
msgid ""
"The code generator no longer uses ``jal`` for calls to absolute immediate"
" addresses."
msgstr ""

#: ../../ReleaseNotes.rst:189
msgid ""
"Disabled fast instruction selection on MIPS32R6 and MIPS64R6 since this "
"is not yet supported."
msgstr ""

#: ../../ReleaseNotes.rst:191
msgid "Corrected addend for ``R_MIPS_HI16`` and ``R_MIPS_PCHI16`` in MCJIT"
msgstr ""

#: ../../ReleaseNotes.rst:192
msgid ""
"The code generator no longer crashes when handling subregisters of an "
"64-bit FPU register with undefined value."
msgstr ""

#: ../../ReleaseNotes.rst:194
msgid ""
"The code generator no longer attempts to use ``$zero`` for operands that "
"do not permit ``$zero``."
msgstr ""

#: ../../ReleaseNotes.rst:196
msgid ""
"Corrected the opcode used for ``ll``/``sc`` when using MIPS32R6/MIPS64R6 "
"and the Integrated Assembler."
msgstr ""

#: ../../ReleaseNotes.rst:198
msgid "Added support for atomic load and atomic store."
msgstr ""

#: ../../ReleaseNotes.rst:199
msgid "Corrected debug info when dynamically re-aligning the stack."
msgstr ""

#: ../../ReleaseNotes.rst:201
msgid ""
"We have made a large number of improvements to the integrated assembler "
"for MIPS. In this release, the integrated assembler isn't quite "
"production-ready since there are a few known issues related to bare-metal"
" support, checking immediates on instructions, and the N32/N64 ABI's. "
"However, the current support should be sufficient for many users of the "
"O32 ABI, particularly those targeting MIPS32 on Linux or bare-metal "
"MIPS32."
msgstr ""

#: ../../ReleaseNotes.rst:208
msgid ""
"If you would like to try the integrated assembler, please use "
"``-fintegrated-as``."
msgstr ""

#: ../../ReleaseNotes.rst:212
msgid "Changes to the PowerPC Target"
msgstr ""

#: ../../ReleaseNotes.rst:214
msgid "There are numerous improvements to the PowerPC target in this release:"
msgstr ""

#: ../../ReleaseNotes.rst:216
msgid "Shrink wrapping optimization has been enabled for PowerPC Little Endian"
msgstr ""

#: ../../ReleaseNotes.rst:218
msgid "Direct move instructions are used when converting scalars to vectors"
msgstr ""

#: ../../ReleaseNotes.rst:220
msgid "Thread Sanitizer (TSAN) is now supported for PowerPC"
msgstr ""

#: ../../ReleaseNotes.rst:222
msgid "New MI peephole pass to clean up redundant XXPERMDI instructions"
msgstr ""

#: ../../ReleaseNotes.rst:224
msgid ""
"Add branch hints to highly biased branch instructions (code reaching "
"unreachable terminators and exceptional control flow constructs)"
msgstr ""

#: ../../ReleaseNotes.rst:227
msgid ""
"Promote boolean return values to integer to prevent excessive usage of "
"condition registers"
msgstr ""

#: ../../ReleaseNotes.rst:230
msgid ""
"Additional vector APIs for vector comparisons and vector merges have been"
" added to altivec.h"
msgstr ""

#: ../../ReleaseNotes.rst:233
msgid "Many bugs have been identified and fixed"
msgstr ""

#: ../../ReleaseNotes.rst:237
msgid "Changes to the X86 Target"
msgstr ""

#: ../../ReleaseNotes.rst:239
msgid "TLS is enabled for Cygwin as emutls."
msgstr ""

#: ../../ReleaseNotes.rst:241
msgid "Smaller code for materializing 32-bit 1 and -1 constants at ``-Os``."
msgstr ""

#: ../../ReleaseNotes.rst:243
msgid ""
"More efficient code for wide integer compares. (E.g. 64-bit compares on "
"32-bit targets.)"
msgstr ""

#: ../../ReleaseNotes.rst:246
msgid ""
"Tail call support for ``thiscall``, ``stdcall``, ``vectorcall``, and "
"``fastcall`` functions."
msgstr ""

#: ../../ReleaseNotes.rst:250
msgid "Changes to the Hexagon Target"
msgstr ""

#: ../../ReleaseNotes.rst:252
msgid ""
"In addition to general code size and performance improvements, Hexagon "
"target now has basic support for Hexagon V60 architecture and Hexagon "
"Vector Extensions (HVX)."
msgstr ""

#: ../../ReleaseNotes.rst:257
msgid "Changes to the AVR Target"
msgstr ""

#: ../../ReleaseNotes.rst:259
msgid ""
"Slightly less than half of the AVR backend has been merged in at this "
"point. It is still missing a number large parts which cause it to be "
"unusable, but is well on the road to being completely merged and "
"workable."
msgstr ""

#: ../../ReleaseNotes.rst:264
msgid "Changes to the OCaml bindings"
msgstr ""

#: ../../ReleaseNotes.rst:266
msgid ""
"The ocaml function link_modules has been replaced with link_modules' "
"which uses LLVMLinkModules2."
msgstr ""

#: ../../ReleaseNotes.rst:271
msgid "External Open Source Projects Using LLVM 3.8"
msgstr ""

#: ../../ReleaseNotes.rst:273
msgid ""
"An exciting aspect of LLVM is that it is used as an enabling technology "
"for a lot of other language and tools projects. This section lists some "
"of the projects that have already been updated to work with LLVM 3.8."
msgstr ""

#: ../../ReleaseNotes.rst:278
msgid "LDC - the LLVM-based D compiler"
msgstr ""

#: ../../ReleaseNotes.rst:280
msgid ""
"`D <http://dlang.org>`_ is a language with C-like syntax and static "
"typing. It pragmatically combines efficiency, control, and modeling "
"power, with safety and programmer productivity. D supports powerful "
"concepts like Compile-Time Function Execution (CTFE) and Template Meta-"
"Programming, provides an innovative approach to concurrency and offers "
"many classical paradigms."
msgstr ""

#: ../../ReleaseNotes.rst:286
msgid ""
"`LDC <http://wiki.dlang.org/LDC>`_ uses the frontend from the reference "
"compiler combined with LLVM as backend to produce efficient native code. "
"LDC targets x86/x86_64 systems like Linux, OS X and Windows and also "
"PowerPC (32/64 bit) and ARM. Ports to other architectures like AArch64 "
"and MIPS64 are underway."
msgstr ""

#: ../../ReleaseNotes.rst:293
msgid "Additional Information"
msgstr ""

#: ../../ReleaseNotes.rst:295
msgid ""
"A wide variety of additional information is available on the `LLVM web "
"page <http://llvm.org/>`_, in particular in the `documentation "
"<http://llvm.org/docs/>`_ section.  The web page also contains versions "
"of the API documentation which is up-to-date with the Subversion version "
"of the source code.  You can access versions of these documents specific "
"to this release by going into the ``llvm/docs/`` directory in the LLVM "
"tree."
msgstr ""

#: ../../ReleaseNotes.rst:302
msgid ""
"If you have any questions or comments about LLVM, please feel free to "
"contact us via the `mailing lists <http://llvm.org/docs/#maillist>`_."
msgstr ""

