# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2003-2016, LLVM Project
# This file is distributed under the same license as the LLVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LLVM 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-17 11:36+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.3\n"

#: ../../AMDGPUUsage.rst:3
msgid "User Guide for AMDGPU Back-end"
msgstr ""

#: ../../AMDGPUUsage.rst:6
msgid "Introduction"
msgstr ""

#: ../../AMDGPUUsage.rst:8
msgid ""
"The AMDGPU back-end provides ISA code generation for AMD GPUs, starting "
"with the R600 family up until the current Volcanic Islands (GCN Gen 3)."
msgstr ""

#: ../../AMDGPUUsage.rst:13
msgid "Assembler"
msgstr ""

#: ../../AMDGPUUsage.rst:15
msgid "The assembler is currently considered experimental."
msgstr ""

#: ../../AMDGPUUsage.rst:17
msgid "For syntax examples look in test/MC/AMDGPU."
msgstr ""

#: ../../AMDGPUUsage.rst:19
msgid ""
"Below some of the currently supported features (modulo bugs).  These all "
"apply to the Southern Islands ISA, Sea Islands and Volcanic Islands are "
"also supported but may be missing some instructions and have more bugs:"
msgstr ""

#: ../../AMDGPUUsage.rst:24
msgid "DS Instructions"
msgstr ""

#: ../../AMDGPUUsage.rst:25
msgid "All DS instructions are supported."
msgstr ""

#: ../../AMDGPUUsage.rst:28
msgid "FLAT Instructions"
msgstr ""

#: ../../AMDGPUUsage.rst:29
msgid ""
"These instructions are only present in the Sea Islands and Volcanic "
"Islands instruction set.  All FLAT instructions are supported for these "
"architectures"
msgstr ""

#: ../../AMDGPUUsage.rst:33
msgid "MUBUF Instructions"
msgstr ""

#: ../../AMDGPUUsage.rst:34
msgid "All non-atomic MUBUF instructions are supported."
msgstr ""

#: ../../AMDGPUUsage.rst:37
msgid "SMRD Instructions"
msgstr ""

#: ../../AMDGPUUsage.rst:38
msgid "Only the s_load_dword* SMRD instructions are supported."
msgstr ""

#: ../../AMDGPUUsage.rst:41
msgid "SOP1 Instructions"
msgstr ""

#: ../../AMDGPUUsage.rst:42
msgid "All SOP1 instructions are supported."
msgstr ""

#: ../../AMDGPUUsage.rst:45
msgid "SOP2 Instructions"
msgstr ""

#: ../../AMDGPUUsage.rst:46
msgid "All SOP2 instructions are supported."
msgstr ""

#: ../../AMDGPUUsage.rst:49
msgid "SOPC Instructions"
msgstr ""

#: ../../AMDGPUUsage.rst:50
msgid "All SOPC instructions are supported."
msgstr ""

#: ../../AMDGPUUsage.rst:53
msgid "SOPP Instructions"
msgstr ""

#: ../../AMDGPUUsage.rst:55
msgid ""
"Unless otherwise mentioned, all SOPP instructions that have one or more "
"operands accept integer operands only.  No verification is performed on "
"the operands, so it is up to the programmer to be familiar with the range"
" or acceptable values."
msgstr ""

#: ../../AMDGPUUsage.rst:61
msgid "s_waitcnt"
msgstr ""

#: ../../AMDGPUUsage.rst:63
msgid ""
"s_waitcnt accepts named arguments to specify which memory counter(s) to "
"wait for."
msgstr ""

#: ../../AMDGPUUsage.rst:79
msgid "VOP1, VOP2, VOP3, VOPC Instructions"
msgstr ""

#: ../../AMDGPUUsage.rst:81
msgid "All 32-bit and 64-bit encodings should work."
msgstr ""

#: ../../AMDGPUUsage.rst:83
msgid ""
"The assembler will automatically detect which encoding size to use for "
"VOP1, VOP2, and VOPC instructions based on the operands.  If you want to "
"force a specific encoding size, you can add an _e32 (for 32-bit encoding)"
" or _e64 (for 64-bit encoding) suffix to the instruction.  Most, but not "
"all instructions support an explicit suffix.  These are all valid "
"assembly strings:"
msgstr ""

#: ../../AMDGPUUsage.rst:97
msgid "Assembler Directives"
msgstr ""

#: ../../AMDGPUUsage.rst:100
msgid ".hsa_code_object_version major, minor"
msgstr ""

#: ../../AMDGPUUsage.rst:102
msgid ""
"*major* and *minor* are integers that specify the version of the HSA code"
" object that will be generated by the assembler.  This value will be "
"stored in an entry of the .note section."
msgstr ""

#: ../../AMDGPUUsage.rst:107
msgid ".hsa_code_object_isa [major, minor, stepping, vendor, arch]"
msgstr ""

#: ../../AMDGPUUsage.rst:109
msgid ""
"*major*, *minor*, and *stepping* are all integers that describe the "
"instruction set architecture (ISA) version of the assembly program."
msgstr ""

#: ../../AMDGPUUsage.rst:112
msgid ""
"*vendor* and *arch* are quoted strings.  *vendor* should always be equal "
"to \"AMD\" and *arch* should always be equal to \"AMDGPU\"."
msgstr ""

#: ../../AMDGPUUsage.rst:115
msgid ""
"If no arguments are specified, then the assembler will derive the ISA "
"version, *vendor*, and *arch* from the value of the -mcpu option that is "
"passed to the assembler."
msgstr ""

#: ../../AMDGPUUsage.rst:119
msgid ""
"ISA version, *vendor*, and *arch* will all be stored in a single entry of"
" the .note section."
msgstr ""

#: ../../AMDGPUUsage.rst:123
msgid ".amd_kernel_code_t"
msgstr ""

#: ../../AMDGPUUsage.rst:125
msgid ""
"This directive marks the beginning of a list of key / value pairs that "
"are used to specify the amd_kernel_code_t object that will be emitted by "
"the assembler. The list must be terminated by the "
"*.end_amd_kernel_code_t* directive.  For any amd_kernel_code_t values "
"that are unspecified a default value will be used.  The default value for"
" all keys is 0, with the following exceptions:"
msgstr ""

#: ../../AMDGPUUsage.rst:131
msgid "*kernel_code_version_major* defaults to 1."
msgstr ""

#: ../../AMDGPUUsage.rst:132
msgid "*machine_kind* defaults to 1."
msgstr ""

#: ../../AMDGPUUsage.rst:133
msgid ""
"*machine_version_major*, *machine_version_minor*, and "
"*machine_version_stepping* are derived from the value of the -mcpu option"
" that is passed to the assembler."
msgstr ""

#: ../../AMDGPUUsage.rst:136
msgid "*kernel_code_entry_byte_offset* defaults to 256."
msgstr ""

#: ../../AMDGPUUsage.rst:137
msgid "*wavefront_size* defaults to 6."
msgstr ""

#: ../../AMDGPUUsage.rst:138
msgid ""
"*kernarg_segment_alignment*, *group_segment_alignment*, and "
"*private_segment_alignment* default to 4.  Note that alignments are "
"specified as a power of two, so a value of **n** means an alignment of 2^"
" **n**."
msgstr ""

#: ../../AMDGPUUsage.rst:142
msgid ""
"The *.amd_kernel_code_t* directive must be placed immediately after the "
"function label and before any instructions."
msgstr ""

#: ../../AMDGPUUsage.rst:145
msgid ""
"For a full list of amd_kernel_code_t keys, see the examples in "
"test/CodeGen/AMDGPU/hsa.s.  For an explanation of the meanings of the "
"different keys, see the comments in lib/Target/AMDGPU/AmdKernelCodeT.h"
msgstr ""

#: ../../AMDGPUUsage.rst:149
msgid "Here is an example of a minimal amd_kernel_code_t specification:"
msgstr ""

